# -*- coding: utf-8 -*-
"""ABDvcJJB.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ATleooQlsy-cTdgDznD-UpgFSmFY_Hv6
"""

import warnings
warnings.filterwarnings('ignore')
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
df = pd.read_csv('ipl_ball_by_ball_data.csv')

pd.set_option('display.max_rows', None)
pd.set_option('display.max_columns', None)
pd.set_option('display.expand_frame_repr', False)
pd.set_option('max_colwidth', -1)

"""
In this comparison we can compare the average, strike rate and number of times Bumrah dismissed AB de Villiers.
"""

df = df[ (df.innings == 1) | (df.innings == 2) ]
df.innings.unique()

rdf = df[(df.striker == 'AB de Villiers') & (df.bowler == 'JJ Bumrah')]
# Runs scored by ABD off Bumrah
print("Runs scored by ABD off Bumrah: ",sum(rdf.runs_off_bat))
# Bowls bowled bu ABD by Bumrah
print("Total balls bowled to ABD by Burmah: ",len(rdf))
# ABD's average against Bumrah
print("AB de Villiers average against Jasprit Bumrah: ",sum(rdf.runs_off_bat)/len(rdf[(rdf.player_dismissed == 'AB de Villiers')]))
# SR
print("AB de Villiers strike rate against Jasprit Bumrah: ",round(100*(sum(rdf.runs_off_bat)/len(rdf)),2))
# Number of times Bumrah dismissed ABD
print("Total number of time Bumrah dismissed ABD: ",len(rdf[(rdf.player_dismissed == 'AB de Villiers')]))

"""
The above stats give us the numbers but to see who got the better of who so 
we compare the two against other players.
"""

# Jasprit Bumrah's stats against all batsmen he has bowled to
jjb = df[df.bowler == 'JJ Bumrah']
jjb1 = pd.DataFrame(jjb.groupby('striker')['runs_off_bat'].sum().reset_index())
jjb2 = pd.DataFrame(jjb.groupby('striker')['ball'].count().reset_index())
jjb3 = jjb1.merge(jjb2, on = 'striker', how = 'left')
jjb3['SR'] = round(100 * (jjb3['runs_off_bat'] / jjb3['ball']),2)
# The above data includes all the batsmen, so to make it a fair comparison we 
# add a criteria of minimum 30 balls bowled
jjb3 = jjb3[jjb3.ball >= 30]
jjb3.reset_index(inplace = True, drop = True)
jjb3.sort_values('SR', ascending = False)

# AB de Villier's stats against all batsmen he has bowled to
abd = df[df.striker == 'AB de Villiers']
abd1 = pd.DataFrame(abd.groupby('bowler')['runs_off_bat'].sum()).reset_index()
abd2 = pd.DataFrame(abd.groupby('bowler')['ball'].count()).reset_index()
abd3 = abd1.merge(abd2, on = 'bowler', how = 'left')
abd3['SR'] = round(100 * (abd3['runs_off_bat'] / abd3['ball']),2)
# The above data includes all the batsmen, so to make it a fair comparison we 
# add a criteria of minimum 30 balls bowled
abd3 = abd3[abd3.ball >= 30]
abd3.reset_index(inplace = True, drop = True)
abd3.sort_values('SR', ascending = False)

# Now we visualize the data for Jasprit Bumrah
plt.figure(figsize = (20,15))
plt.scatter(jjb3.SR,jjb3.runs_off_bat)
for i in range (len(jjb3)):
  if jjb3['striker'][i] == 'RV Uthappa':
    plt.text(jjb3['SR'][i]+1, jjb3['runs_off_bat'][i]+2,jjb3['striker'][i])
  else:
    plt.text(jjb3['SR'][i]+1, jjb3['runs_off_bat'][i],jjb3['striker'][i])
plt.title('Jasprit Bumrah vs all batsmen (Min. 30 balls)')
plt.xlabel('Strike Rate')
plt.ylabel('Runs Scored')
plt.axvline(120, ls = '--', color = 'red')
plt.axhline(60,ls = '--', color = 'red')
plt.show()

"""
From the above plot we understand that:
1. The players that are closer to the origin were troubled by Jasprit Bumrah.
2. The Players on the bottom left quardrant were dominated by Jasprit Bumrah on most occasions.
3. The Players on the top right quardrant dominated Japrit Bumrah on most occasions.
"""

# Visualising for AB de Villiers
plt.figure(figsize = (20,15))
plt.scatter(abd3.SR,abd3.runs_off_bat)
for i in range (len(abd3)):
  if abd3['bowler'][i] == 'M Ashwin' :
    plt.text(abd3['SR'][i], abd3['runs_off_bat'][i]+1,abd3['bowler'][i])
  elif abd3['bowler'][i] == 'PP Chawla':
    plt.text(abd3['SR'][i], abd3['runs_off_bat'][i]+2,abd3['bowler'][i])
  else:
    plt.text(abd3['SR'][i]+1, abd3['runs_off_bat'][i],abd3['bowler'][i])
plt.title('AB de Villiers vs all bowlers (Min. 30 balls)')
plt.xlabel('Strike Rate')
plt.ylabel('Runs Scored')
plt.axvline(120, ls = '--', color = 'red')
plt.axhline(60,ls = '--', color = 'red')
plt.show()

"""
We understand from the above plot that:
1. The closer the player is to the origin, the better i.e. he troubled AB de Villiers.
2. The bottom left quardrant shows the bowlers that dominated AB de Villiers on most occasions.
3. The top right quardrant are the bowlers that AB de Villiers dominated.
"""